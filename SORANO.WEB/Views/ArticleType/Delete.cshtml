@model ArticleTypeDeleteViewModel

@{
    ViewBag.Title = "SORANO - Удаление типа артикулов";
    ViewBag.Header = "Удаление";
    ViewBag.Description = "типа артикулов";
    ViewBag.Icon = "fa fa-fw fa-trash";
}

@section Breadcrumb {
    <ul class="breadcrumb">
        <li><a asp-controller="Home" asp-action="Index">Главная</a></li>
        <li><a asp-controller="Article" asp-action="Index">Артикулы</a></li>
        <li class="active">Удаление типа артикулов</li>
    </ul>
}

<div class="row">
    @await Component.InvokeAsync("CanBeDeleted", new
    {
        canBeDeleted = Model.CanBeDeleted,
        error = "Тип артикулов не может быть удалён, так как у него есть связанные с ним артикулы.",
        warning = "Вы уверены, что хотите удалить следующий тип артикулов?"
    })
</div>
<div class="row">
    <div class="col-lg-12">
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Name)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Name)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Description)
            </dd>
        </dl>
        <form asp-action="Delete">
            <input type="hidden" asp-for="ID" />
            <input type="hidden" asp-for="Name" />
            <div class="form-group">
                <a class="btn btn-default btn-sm" asp-controller="Article" asp-action="Index">
                    <i class="fa fa-fw fa-close"></i>
                    Отмена
                </a>
                @if (Model.CanBeDeleted)
                {
                    <button type="submit" class="btn btn-danger btn-sm">
                        <i class="fa fa-fw fa-trash"></i>
                        Удалить
                    </button>
                }                
            </div>
        </form>
    </div>
</div>