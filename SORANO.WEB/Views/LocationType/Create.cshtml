@model LocationTypeModel

@{
    var isEdit = ViewData.ContainsKey("IsEdit") && (bool)ViewData["IsEdit"];
    var title = isEdit ? "Редактирование" : "Создание";
}

@{
    ViewBag.Title = "SORANO - " + title + " типа мест";
    ViewBag.Header = title;
    ViewBag.Description = " типа мест";
    ViewBag.Icon = "fa fa-map-signs";
}

@section Breadcrumb {
    <ul class="breadcrumb">
        <li><a asp-controller="Home" asp-action="Index">Главная</a></li>
        <li><a asp-controller="Supplier" asp-action="Index">Места</a></li>
        <li class="active">@title типа мест</li>
    </ul>
}

<form asp-action="@(isEdit ? "Update" : "Create")"
      asp-controller="LocationType"
      method="post"
      enctype="multipart/form-data">
    <input type="hidden" asp-for="ID" />
    @for (var i = 0; i < Model.Recommendations.Count; i++)
    {
        <input type="hidden" asp-for="@Model.Recommendations[i].ID" />
        <input type="hidden" asp-for="@Model.Recommendations[i].ParentID" />
    }
    @for (int i = 0; i < Model.Attachments.Count; i++)
    {
        <input type="hidden" asp-for="@Model.Attachments[i].ID" />
        <input type="hidden" asp-for="@Model.Attachments[i].IsNew" />
        <input type="hidden" asp-for="@Model.Attachments[i].FullPath" />
        <input type="hidden" asp-for="@Model.Attachments[i].Type.MimeTypes" />
        <input type="hidden" asp-for="@Model.Attachments[i].Type.Name" />
    }
    @Html.HiddenFor(m => m.MainPicture.ID)
    @Html.HiddenFor(m => m.MainPicture.Name)
    @Html.HiddenFor(m => m.MainPicture.FullPath)
    @Html.HiddenFor(m => m.MainPicture.TypeID)
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="row">
        <div class="col-lg-6 col-md-6 col-sm-12">
            <div class="form-group">
                <label class="control-label" asp-for="Name">Название:</label>
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-truck"></i></span>
                    <input class="form-control" type="text" asp-for="Name" placeholder="Название" />
                </div>
            </div>
            <div class="form-group">
                <label class="control-label" asp-for="Description">Описание:</label>
                <div class="input-group">
                    <span class="input-group-addon" style="vertical-align: top"><i class="fa fa-align-justify"></i></span>
                    <textarea class="form-control" style="resize: vertical;" rows="3" asp-for="Description" placeholder="Описание"></textarea>
                </div>
            </div>            
        </div>
        <div class="col-lg-6 col-md-6 col-sm-12">
            @Html.Partial("~/Views/Shared/_MainPictureForm.cshtml", Model)
            @Html.Partial("~/Views/Shared/_AttachmentsForm.cshtml", Model)
            @Html.Partial("~/Views/Shared/_RecommendationsForm.cshtml", Model)
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="form-group">
                <a class="btn btn-default" asp-controller="Location" asp-action="Index">
                    <i class="fa fa-close"></i>
                    Отмена
                </a>
                <button type="submit" class="btn btn-primary">
                    <i class="fa fa-check"></i>
                    Сохранить
                </button>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $("input.input-validation-error").not(".recommendations,.attachments").closest(".form-group").addClass("has-error");
            $("select.input-validation-error").closest(".form-group").addClass("has-error");

            $('input[type=file]').not('#main_picture_input').change(function () {
                var id = $(this).attr('id');
                var name = document.getElementById(id).files[0].name;
                var matches = id.match(/\d+$/);
                if (matches) {
                    var number = matches[0];
                    $('#attachment_name_' + number).val(name);
                    $('#Attachments_' + number + '__IsNew').val(true);
                }
            });
        });

        function previewMainPicture(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById("mainPicture_info").style.display = 'none';
                    document.getElementById("mainPicture_img").style.display = 'inline-block';
                    $('#mainPicture_img').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        function getMimeType(num) {
            var id = $('#select_type_' + num).val();
            if (id) {
                $.post("@Url.Action("GetMimeType", "Article")?id=" + id, function (mimeType) {
                    $('#attachment_input_' + num).attr('accept', mimeType);
                });
            }
        }
    </script>
}
