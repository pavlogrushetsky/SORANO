@model UserBlockViewModel

@{
    ViewBag.Title = "SORANO - " + (Model.IsBlocked ? "Разблокирование" : "Блокирование") + " пользователя";
    ViewBag.Header = Model.IsBlocked ? "Разблокирование" : "Блокирование";
    ViewBag.Description = "пользователя";
    ViewBag.Icon = Model.IsBlocked ? "fa fa-fw fa-unlock" : "fa fa-fw fa-lock";
}

@section Breadcrumb {
    <ul class="breadcrumb">
        <li><a asp-controller="Home" asp-action="Index">Главная</a></li>
        <li><a asp-controller="User" asp-action="Index">Пользователи</a></li>
        <li class="active">@(Model.IsBlocked ? "Разблокирование" : "Блокирование")</li>
    </ul>
}

<div class="row">
    @if (Model.IsBlocked)
    {
        <div class="col-lg-12">
            <div class="alert alert-dismissible alert-warning">
                <strong>Внимание!</strong> Вы уверены, что хотите разблокировать следующего пользователя?
            </div>
        </div>
    }
    else
    {
        @await Component.InvokeAsync("CanBeDeleted", new
        {
            canBeDeleted = Model.CanBeBlocked,
            error = "Пользователь не может быть заблокирован, так как он является текущим пользователем в системе.",
            warning = "Вы уверены, что хотите заблокировать следующего пользователя?"
        })
    }    
</div>
<div class="row">
    <div class="col-lg-12">
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Login)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Login)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Description)
            </dd>
        </dl>
        <form asp-action="Block">
            <input type="hidden" asp-for="ID" />
            <input type="hidden" asp-for="Login" />
            <div class="form-group">
                <a class="btn btn-default btn-sm" asp-controller="User" asp-action="Index">
                    <i class="fa fa-fw fa-close"></i>
                    Отмена
                </a>
                @if (Model.IsBlocked || !Model.IsBlocked && Model.CanBeBlocked)
                {
                    <button type="submit" class="btn btn-sm btn@(Model.IsBlocked ? "-success" : "-warning") @((!Model.IsBlocked && Model.CanBeBlocked) || Model.IsBlocked ? "" : "disabled")">
                        <i class="fa fa-fw @(Model.IsBlocked ? "fa-unlock" : "fa-lock")"></i>
                        @(Model.IsBlocked ? "Разблокировать" : "Заблокировать")
                    </button>
                }               
            </div>
        </form>
    </div>
</div>